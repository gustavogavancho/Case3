name: Build and deploy .NET Core application to Web App master-ugr-ci-backend-uat

on:
  workflow_dispatch:
  pull_request:
    branches:
      - dev

env:
  AZURE_WEBAPP_NAME: gustavogavanchol-calculator-backend-uat
  AZURE_WEBAPP_PACKAGE_PATH: master-ugr.calculator.back-end/calculator.backend/publish
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: master-ugr.calculator.back-end/calculator.backend
  TEST_PATH: master-ugr.calculator.back-end/tests/calculator.backend.test
  CALCULATOR_BACKEND_URL: https://gustavogavanchol-calculator-backend-uat.azurewebsites.net/

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      # Checkout the repository

    - name: Listing current dir
      run: ls -la

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"

    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"

    - name: Publish Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: SonarCloud Scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet tool install --global dotnet-sonarscanner
        export PATH="$PATH:/home/runner/.dotnet/tools"
        dotnet sonarscanner begin \
          /k:"ugr-master_case3" \
          /o:"ugr-master" \
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.pullrequest.key="${{ github.event.pull_request.number }}" \
          /d:sonar.pullrequest.branch="${{ github.head_ref }}" \
          /d:sonar.pullrequest.base="${{ github.base_ref }}" \
          /d:sonar.github.repository="${{ github.repository }}" \
          /d:sonar.cs.opencover.reportsPaths="${{ env.WORKING_DIRECTORY }}/TestResults/Coverage/coverage.opencover.xml"
        dotnet build "${{ env.WORKING_DIRECTORY }}"
        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.MASTER_UGR_CI_BACKEND_UAT_SPN }}

  test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Run tests
      run: dotnet test ${{ env.TEST_PATH }}
